package org.campware.cream.om;


import java.math.BigDecimal;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;

import org.apache.commons.lang.ObjectUtils;
import org.apache.turbine.om.Retrievable;
import org.apache.torque.TorqueException;
import org.apache.torque.om.BaseObject;
import org.apache.torque.om.ComboKey;
import org.apache.torque.om.DateKey;
import org.apache.torque.om.NumberKey;
import org.apache.torque.om.ObjectKey;
import org.apache.torque.om.SimpleKey;
import org.apache.torque.om.StringKey;
import org.apache.torque.om.Persistent;
import org.apache.torque.util.Criteria;
import org.apache.torque.util.Transaction;


/**
 * This class was autogenerated by Torque on:
 *
 * [Fri Jan 26 03:28:50 CET 2007]
 *
 * You should not use this class directly.  It should not even be
 * extended all references should be to CreamUser
 */
public abstract class BaseCreamUser extends BaseObject
    implements org.apache.turbine.om.Retrievable
{
    /** The Peer class */
    private static final CreamUserPeer peer =
        new CreamUserPeer();

        
    /** The value for the userId field */
    private int userId;
      
    /** The value for the userName field */
    private String userName;
      
    /** The value for the welcome field */
    private String welcome;
                                          
    /** The value for the defaultList field */
    private int defaultList = 1000;
                                          
    /** The value for the inboxFid field */
    private int inboxFid = 1000;
                                          
    /** The value for the outboxFid field */
    private int outboxFid = 1000;
                                          
    /** The value for the newsSubsFid field */
    private int newsSubsFid = 1000;
                                          
    /** The value for the newsletterFid field */
    private int newsletterFid = 1000;
                                          
    /** The value for the onlineSubsFid field */
    private int onlineSubsFid = 1000;
                                          
    /** The value for the printSubsFid field */
    private int printSubsFid = 1000;
                                          
    /** The value for the serviceFid field */
    private int serviceFid = 1000;
                                          
    /** The value for the shipmentFid field */
    private int shipmentFid = 1000;
                                          
    /** The value for the paymentFid field */
    private int paymentFid = 1000;
                                          
    /** The value for the sorderFid field */
    private int sorderFid = 1000;
                                          
    /** The value for the customerFid field */
    private int customerFid = 1000;
                                          
    /** The value for the projectFid field */
    private int projectFid = 1000;
                                          
    /** The value for the productFid field */
    private int productFid = 1000;
                                          
    /** The value for the contactFid field */
    private int contactFid = 1000;
                                          
    /** The value for the taskFid field */
    private int taskFid = 1000;
                                          
    /** The value for the fileFid field */
    private int fileFid = 1000;
                                          
    /** The value for the leadFid field */
    private int leadFid = 1000;
                                          
    /** The value for the opportunityFid field */
    private int opportunityFid = 1000;
  
    
    /**
     * Get the UserId
     *
     * @return int
     */
    public int getUserId()
    {
        return userId;
    }

                        
    /**
     * Set the value of UserId
     *
     * @param v new value
     */
    public void setUserId(int v) 
    {
    
                  if (this.userId != v)
              {
            this.userId = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the UserName
     *
     * @return String
     */
    public String getUserName()
    {
        return userName;
    }

                        
    /**
     * Set the value of UserName
     *
     * @param v new value
     */
    public void setUserName(String v) 
    {
    
                  if (!ObjectUtils.equals(this.userName, v))
              {
            this.userName = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the Welcome
     *
     * @return String
     */
    public String getWelcome()
    {
        return welcome;
    }

                        
    /**
     * Set the value of Welcome
     *
     * @param v new value
     */
    public void setWelcome(String v) 
    {
    
                  if (!ObjectUtils.equals(this.welcome, v))
              {
            this.welcome = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the DefaultList
     *
     * @return int
     */
    public int getDefaultList()
    {
        return defaultList;
    }

                        
    /**
     * Set the value of DefaultList
     *
     * @param v new value
     */
    public void setDefaultList(int v) 
    {
    
                  if (this.defaultList != v)
              {
            this.defaultList = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the InboxFid
     *
     * @return int
     */
    public int getInboxFid()
    {
        return inboxFid;
    }

                        
    /**
     * Set the value of InboxFid
     *
     * @param v new value
     */
    public void setInboxFid(int v) 
    {
    
                  if (this.inboxFid != v)
              {
            this.inboxFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the OutboxFid
     *
     * @return int
     */
    public int getOutboxFid()
    {
        return outboxFid;
    }

                        
    /**
     * Set the value of OutboxFid
     *
     * @param v new value
     */
    public void setOutboxFid(int v) 
    {
    
                  if (this.outboxFid != v)
              {
            this.outboxFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the NewsSubsFid
     *
     * @return int
     */
    public int getNewsSubsFid()
    {
        return newsSubsFid;
    }

                        
    /**
     * Set the value of NewsSubsFid
     *
     * @param v new value
     */
    public void setNewsSubsFid(int v) 
    {
    
                  if (this.newsSubsFid != v)
              {
            this.newsSubsFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the NewsletterFid
     *
     * @return int
     */
    public int getNewsletterFid()
    {
        return newsletterFid;
    }

                        
    /**
     * Set the value of NewsletterFid
     *
     * @param v new value
     */
    public void setNewsletterFid(int v) 
    {
    
                  if (this.newsletterFid != v)
              {
            this.newsletterFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the OnlineSubsFid
     *
     * @return int
     */
    public int getOnlineSubsFid()
    {
        return onlineSubsFid;
    }

                        
    /**
     * Set the value of OnlineSubsFid
     *
     * @param v new value
     */
    public void setOnlineSubsFid(int v) 
    {
    
                  if (this.onlineSubsFid != v)
              {
            this.onlineSubsFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the PrintSubsFid
     *
     * @return int
     */
    public int getPrintSubsFid()
    {
        return printSubsFid;
    }

                        
    /**
     * Set the value of PrintSubsFid
     *
     * @param v new value
     */
    public void setPrintSubsFid(int v) 
    {
    
                  if (this.printSubsFid != v)
              {
            this.printSubsFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the ServiceFid
     *
     * @return int
     */
    public int getServiceFid()
    {
        return serviceFid;
    }

                        
    /**
     * Set the value of ServiceFid
     *
     * @param v new value
     */
    public void setServiceFid(int v) 
    {
    
                  if (this.serviceFid != v)
              {
            this.serviceFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the ShipmentFid
     *
     * @return int
     */
    public int getShipmentFid()
    {
        return shipmentFid;
    }

                        
    /**
     * Set the value of ShipmentFid
     *
     * @param v new value
     */
    public void setShipmentFid(int v) 
    {
    
                  if (this.shipmentFid != v)
              {
            this.shipmentFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the PaymentFid
     *
     * @return int
     */
    public int getPaymentFid()
    {
        return paymentFid;
    }

                        
    /**
     * Set the value of PaymentFid
     *
     * @param v new value
     */
    public void setPaymentFid(int v) 
    {
    
                  if (this.paymentFid != v)
              {
            this.paymentFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the SorderFid
     *
     * @return int
     */
    public int getSorderFid()
    {
        return sorderFid;
    }

                        
    /**
     * Set the value of SorderFid
     *
     * @param v new value
     */
    public void setSorderFid(int v) 
    {
    
                  if (this.sorderFid != v)
              {
            this.sorderFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the CustomerFid
     *
     * @return int
     */
    public int getCustomerFid()
    {
        return customerFid;
    }

                        
    /**
     * Set the value of CustomerFid
     *
     * @param v new value
     */
    public void setCustomerFid(int v) 
    {
    
                  if (this.customerFid != v)
              {
            this.customerFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the ProjectFid
     *
     * @return int
     */
    public int getProjectFid()
    {
        return projectFid;
    }

                        
    /**
     * Set the value of ProjectFid
     *
     * @param v new value
     */
    public void setProjectFid(int v) 
    {
    
                  if (this.projectFid != v)
              {
            this.projectFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the ProductFid
     *
     * @return int
     */
    public int getProductFid()
    {
        return productFid;
    }

                        
    /**
     * Set the value of ProductFid
     *
     * @param v new value
     */
    public void setProductFid(int v) 
    {
    
                  if (this.productFid != v)
              {
            this.productFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the ContactFid
     *
     * @return int
     */
    public int getContactFid()
    {
        return contactFid;
    }

                        
    /**
     * Set the value of ContactFid
     *
     * @param v new value
     */
    public void setContactFid(int v) 
    {
    
                  if (this.contactFid != v)
              {
            this.contactFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the TaskFid
     *
     * @return int
     */
    public int getTaskFid()
    {
        return taskFid;
    }

                        
    /**
     * Set the value of TaskFid
     *
     * @param v new value
     */
    public void setTaskFid(int v) 
    {
    
                  if (this.taskFid != v)
              {
            this.taskFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the FileFid
     *
     * @return int
     */
    public int getFileFid()
    {
        return fileFid;
    }

                        
    /**
     * Set the value of FileFid
     *
     * @param v new value
     */
    public void setFileFid(int v) 
    {
    
                  if (this.fileFid != v)
              {
            this.fileFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the LeadFid
     *
     * @return int
     */
    public int getLeadFid()
    {
        return leadFid;
    }

                        
    /**
     * Set the value of LeadFid
     *
     * @param v new value
     */
    public void setLeadFid(int v) 
    {
    
                  if (this.leadFid != v)
              {
            this.leadFid = v;
            setModified(true);
        }
    
          
              }
  
    /**
     * Get the OpportunityFid
     *
     * @return int
     */
    public int getOpportunityFid()
    {
        return opportunityFid;
    }

                        
    /**
     * Set the value of OpportunityFid
     *
     * @param v new value
     */
    public void setOpportunityFid(int v) 
    {
    
                  if (this.opportunityFid != v)
              {
            this.opportunityFid = v;
            setModified(true);
        }
    
          
              }
  
         
                
    private static List fieldNames = null;

    /**
     * Generate a list of field names.
     *
     * @return a list of field names
     */
    public static synchronized List getFieldNames()
    {
        if (fieldNames == null)
        {
            fieldNames = new ArrayList();
              fieldNames.add("UserId");
              fieldNames.add("UserName");
              fieldNames.add("Welcome");
              fieldNames.add("DefaultList");
              fieldNames.add("InboxFid");
              fieldNames.add("OutboxFid");
              fieldNames.add("NewsSubsFid");
              fieldNames.add("NewsletterFid");
              fieldNames.add("OnlineSubsFid");
              fieldNames.add("PrintSubsFid");
              fieldNames.add("ServiceFid");
              fieldNames.add("ShipmentFid");
              fieldNames.add("PaymentFid");
              fieldNames.add("SorderFid");
              fieldNames.add("CustomerFid");
              fieldNames.add("ProjectFid");
              fieldNames.add("ProductFid");
              fieldNames.add("ContactFid");
              fieldNames.add("TaskFid");
              fieldNames.add("FileFid");
              fieldNames.add("LeadFid");
              fieldNames.add("OpportunityFid");
              fieldNames = Collections.unmodifiableList(fieldNames);
        }
        return fieldNames;
    }

    /**
     * Retrieves a field from the object by name passed in as a String.
     *
     * @param name field name
     * @return value
     */
    public Object getByName(String name)
    {
          if (name.equals("UserId"))
        {
                return new Integer(getUserId());
            }
          if (name.equals("UserName"))
        {
                return getUserName();
            }
          if (name.equals("Welcome"))
        {
                return getWelcome();
            }
          if (name.equals("DefaultList"))
        {
                return new Integer(getDefaultList());
            }
          if (name.equals("InboxFid"))
        {
                return new Integer(getInboxFid());
            }
          if (name.equals("OutboxFid"))
        {
                return new Integer(getOutboxFid());
            }
          if (name.equals("NewsSubsFid"))
        {
                return new Integer(getNewsSubsFid());
            }
          if (name.equals("NewsletterFid"))
        {
                return new Integer(getNewsletterFid());
            }
          if (name.equals("OnlineSubsFid"))
        {
                return new Integer(getOnlineSubsFid());
            }
          if (name.equals("PrintSubsFid"))
        {
                return new Integer(getPrintSubsFid());
            }
          if (name.equals("ServiceFid"))
        {
                return new Integer(getServiceFid());
            }
          if (name.equals("ShipmentFid"))
        {
                return new Integer(getShipmentFid());
            }
          if (name.equals("PaymentFid"))
        {
                return new Integer(getPaymentFid());
            }
          if (name.equals("SorderFid"))
        {
                return new Integer(getSorderFid());
            }
          if (name.equals("CustomerFid"))
        {
                return new Integer(getCustomerFid());
            }
          if (name.equals("ProjectFid"))
        {
                return new Integer(getProjectFid());
            }
          if (name.equals("ProductFid"))
        {
                return new Integer(getProductFid());
            }
          if (name.equals("ContactFid"))
        {
                return new Integer(getContactFid());
            }
          if (name.equals("TaskFid"))
        {
                return new Integer(getTaskFid());
            }
          if (name.equals("FileFid"))
        {
                return new Integer(getFileFid());
            }
          if (name.equals("LeadFid"))
        {
                return new Integer(getLeadFid());
            }
          if (name.equals("OpportunityFid"))
        {
                return new Integer(getOpportunityFid());
            }
          return null;
    }
    
    /**
     * Retrieves a field from the object by name passed in
     * as a String.  The String must be one of the static
     * Strings defined in this Class' Peer.
     *
     * @param name peer name
     * @return value
     */
    public Object getByPeerName(String name)
    {
          if (name.equals(CreamUserPeer.USER_ID))
        {
                return new Integer(getUserId());
            }
          if (name.equals(CreamUserPeer.LOGIN_NAME))
        {
                return getUserName();
            }
          if (name.equals(CreamUserPeer.WELCOME))
        {
                return getWelcome();
            }
          if (name.equals(CreamUserPeer.DEFAULT_LIST))
        {
                return new Integer(getDefaultList());
            }
          if (name.equals(CreamUserPeer.INBOX_FID))
        {
                return new Integer(getInboxFid());
            }
          if (name.equals(CreamUserPeer.OUTBOX_FID))
        {
                return new Integer(getOutboxFid());
            }
          if (name.equals(CreamUserPeer.NEWS_SUBS_FID))
        {
                return new Integer(getNewsSubsFid());
            }
          if (name.equals(CreamUserPeer.NEWSLETTER_FID))
        {
                return new Integer(getNewsletterFid());
            }
          if (name.equals(CreamUserPeer.ONLINE_SUBS_FID))
        {
                return new Integer(getOnlineSubsFid());
            }
          if (name.equals(CreamUserPeer.PRINT_SUBS_FID))
        {
                return new Integer(getPrintSubsFid());
            }
          if (name.equals(CreamUserPeer.SERVICE_FID))
        {
                return new Integer(getServiceFid());
            }
          if (name.equals(CreamUserPeer.SHIPMENT_FID))
        {
                return new Integer(getShipmentFid());
            }
          if (name.equals(CreamUserPeer.PAYMENT_FID))
        {
                return new Integer(getPaymentFid());
            }
          if (name.equals(CreamUserPeer.SORDER_FID))
        {
                return new Integer(getSorderFid());
            }
          if (name.equals(CreamUserPeer.CUSTOMER_FID))
        {
                return new Integer(getCustomerFid());
            }
          if (name.equals(CreamUserPeer.PROJECT_FID))
        {
                return new Integer(getProjectFid());
            }
          if (name.equals(CreamUserPeer.PRODUCT_FID))
        {
                return new Integer(getProductFid());
            }
          if (name.equals(CreamUserPeer.CONTACT_FID))
        {
                return new Integer(getContactFid());
            }
          if (name.equals(CreamUserPeer.TASK_FID))
        {
                return new Integer(getTaskFid());
            }
          if (name.equals(CreamUserPeer.FILE_FID))
        {
                return new Integer(getFileFid());
            }
          if (name.equals(CreamUserPeer.LEAD_FID))
        {
                return new Integer(getLeadFid());
            }
          if (name.equals(CreamUserPeer.OPPORTUNITY_FID))
        {
                return new Integer(getOpportunityFid());
            }
          return null;
    }

    /**
     * Retrieves a field from the object by Position as specified
     * in the xml schema.  Zero-based.
     *
     * @param pos position in xml schema
     * @return value
     */
    public Object getByPosition(int pos)
    {
            if (pos == 0)
        {
                return new Integer(getUserId());
            }
              if (pos == 1)
        {
                return getUserName();
            }
              if (pos == 2)
        {
                return getWelcome();
            }
              if (pos == 3)
        {
                return new Integer(getDefaultList());
            }
              if (pos == 4)
        {
                return new Integer(getInboxFid());
            }
              if (pos == 5)
        {
                return new Integer(getOutboxFid());
            }
              if (pos == 6)
        {
                return new Integer(getNewsSubsFid());
            }
              if (pos == 7)
        {
                return new Integer(getNewsletterFid());
            }
              if (pos == 8)
        {
                return new Integer(getOnlineSubsFid());
            }
              if (pos == 9)
        {
                return new Integer(getPrintSubsFid());
            }
              if (pos == 10)
        {
                return new Integer(getServiceFid());
            }
              if (pos == 11)
        {
                return new Integer(getShipmentFid());
            }
              if (pos == 12)
        {
                return new Integer(getPaymentFid());
            }
              if (pos == 13)
        {
                return new Integer(getSorderFid());
            }
              if (pos == 14)
        {
                return new Integer(getCustomerFid());
            }
              if (pos == 15)
        {
                return new Integer(getProjectFid());
            }
              if (pos == 16)
        {
                return new Integer(getProductFid());
            }
              if (pos == 17)
        {
                return new Integer(getContactFid());
            }
              if (pos == 18)
        {
                return new Integer(getTaskFid());
            }
              if (pos == 19)
        {
                return new Integer(getFileFid());
            }
              if (pos == 20)
        {
                return new Integer(getLeadFid());
            }
              if (pos == 21)
        {
                return new Integer(getOpportunityFid());
            }
              return null;
    }
     
    /**
     * Stores the object in the database.  If the object is new,
     * it inserts it; otherwise an update is performed.
     *
     * @throws Exception
     */
    public void save() throws Exception
    {
          save(CreamUserPeer.getMapBuilder()
                .getDatabaseMap().getName());
      }

    /**
     * Stores the object in the database.  If the object is new,
     * it inserts it; otherwise an update is performed.
       * Note: this code is here because the method body is
     * auto-generated conditionally and therefore needs to be
     * in this file instead of in the super class, BaseObject.
       *
     * @param dbName
     * @throws TorqueException
     */
    public void save(String dbName) throws TorqueException
    {
        Connection con = null;
          try
        {
            con = Transaction.begin(dbName);
            save(con);
            Transaction.commit(con);
        }
        catch(TorqueException e)
        {
            Transaction.safeRollback(con);
            throw e;
        }
      }

      /** flag to prevent endless save loop, if this object is referenced
        by another object which falls in this transaction. */
    private boolean alreadyInSave = false;
      /**
     * Stores the object in the database.  If the object is new,
     * it inserts it; otherwise an update is performed.  This method
     * is meant to be used as part of a transaction, otherwise use
     * the save() method and the connection details will be handled
     * internally
     *
     * @param con
     * @throws TorqueException
     */
    public void save(Connection con) throws TorqueException
    {
          if (!alreadyInSave)
        {
            alreadyInSave = true;


  
            // If this object has been modified, then save it to the database.
            if (isModified())
            {
                if (isNew())
                {
                    CreamUserPeer.doInsert((CreamUser) this, con);
                    setNew(false);
                }
                else
                {
                    CreamUserPeer.doUpdate((CreamUser) this, con);
                }
            }

                      alreadyInSave = false;
        }
      }

                  
      /**
     * Set the PrimaryKey using ObjectKey.
     *
     * @param key userId ObjectKey
     */
    public void setPrimaryKey(ObjectKey key)
        
    {
            setUserId(((NumberKey) key).intValue());
        }

    /**
     * Set the PrimaryKey using a String.
     *
     * @param key
     */
    public void setPrimaryKey(String key) 
    {
            setUserId(Integer.parseInt(key));
        }

  
    /**
     * returns an id that differentiates this object from others
     * of its class.
     */
    public ObjectKey getPrimaryKey()
    {
          return SimpleKey.keyFor(getUserId());
      }
 
    /**
     * get an id that differentiates this object from others
     * of its class.
     */
    public String getQueryKey()
    {
        if (getPrimaryKey() == null)
        {
            return "";
        }
        else
        {
            return getPrimaryKey().toString();
        }
    }

    /**
     * set an id that differentiates this object from others
     * of its class.
     */
    public void setQueryKey(String key)
        throws TorqueException
    {
        setPrimaryKey(key);
    }

    /**
     * Makes a copy of this object.
     * It creates a new object filling in the simple attributes.
       * It then fills all the association collections and sets the
     * related objects to isNew=true.
       */
      public CreamUser copy() throws TorqueException
    {
        return copyInto(new CreamUser());
    }
  
    protected CreamUser copyInto(CreamUser copyObj) throws TorqueException
    {
          copyObj.setUserId(userId);
          copyObj.setUserName(userName);
          copyObj.setWelcome(welcome);
          copyObj.setDefaultList(defaultList);
          copyObj.setInboxFid(inboxFid);
          copyObj.setOutboxFid(outboxFid);
          copyObj.setNewsSubsFid(newsSubsFid);
          copyObj.setNewsletterFid(newsletterFid);
          copyObj.setOnlineSubsFid(onlineSubsFid);
          copyObj.setPrintSubsFid(printSubsFid);
          copyObj.setServiceFid(serviceFid);
          copyObj.setShipmentFid(shipmentFid);
          copyObj.setPaymentFid(paymentFid);
          copyObj.setSorderFid(sorderFid);
          copyObj.setCustomerFid(customerFid);
          copyObj.setProjectFid(projectFid);
          copyObj.setProductFid(productFid);
          copyObj.setContactFid(contactFid);
          copyObj.setTaskFid(taskFid);
          copyObj.setFileFid(fileFid);
          copyObj.setLeadFid(leadFid);
          copyObj.setOpportunityFid(opportunityFid);
  
                            copyObj.setUserId( 0);
                                                                                                                                          
                return copyObj;
    }

    /**
     * returns a peer instance associated with this om.  Since Peer classes
     * are not to have any instance attributes, this method returns the
     * same instance for all member of this class. The method could therefore
     * be static, but this would prevent one from overriding the behavior.
     */
    public CreamUserPeer getPeer()
    {
        return peer;
    }

    public String toString()
    {
        StringBuffer str = new StringBuffer();
        str.append("CreamUser:\n");
        str.append("UserId = ")
               .append(getUserId())
             .append("\n");
        str.append("UserName = ")
               .append(getUserName())
             .append("\n");
        str.append("Welcome = ")
               .append(getWelcome())
             .append("\n");
        str.append("DefaultList = ")
               .append(getDefaultList())
             .append("\n");
        str.append("InboxFid = ")
               .append(getInboxFid())
             .append("\n");
        str.append("OutboxFid = ")
               .append(getOutboxFid())
             .append("\n");
        str.append("NewsSubsFid = ")
               .append(getNewsSubsFid())
             .append("\n");
        str.append("NewsletterFid = ")
               .append(getNewsletterFid())
             .append("\n");
        str.append("OnlineSubsFid = ")
               .append(getOnlineSubsFid())
             .append("\n");
        str.append("PrintSubsFid = ")
               .append(getPrintSubsFid())
             .append("\n");
        str.append("ServiceFid = ")
               .append(getServiceFid())
             .append("\n");
        str.append("ShipmentFid = ")
               .append(getShipmentFid())
             .append("\n");
        str.append("PaymentFid = ")
               .append(getPaymentFid())
             .append("\n");
        str.append("SorderFid = ")
               .append(getSorderFid())
             .append("\n");
        str.append("CustomerFid = ")
               .append(getCustomerFid())
             .append("\n");
        str.append("ProjectFid = ")
               .append(getProjectFid())
             .append("\n");
        str.append("ProductFid = ")
               .append(getProductFid())
             .append("\n");
        str.append("ContactFid = ")
               .append(getContactFid())
             .append("\n");
        str.append("TaskFid = ")
               .append(getTaskFid())
             .append("\n");
        str.append("FileFid = ")
               .append(getFileFid())
             .append("\n");
        str.append("LeadFid = ")
               .append(getLeadFid())
             .append("\n");
        str.append("OpportunityFid = ")
               .append(getOpportunityFid())
             .append("\n");
        return(str.toString());
    }
}
